name: Build and Deploy with ko

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24'
      - name: Install ko
        uses: ko-build/setup-ko@v0.9

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@master
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set variables
        id: set_var
        run: |
          content=`cat ./config.json`
          version=`echo $(jq -r '.version' <<< "$content")`
          echo "version=${version}" >> $GITHUB_OUTPUT
          REPO_NAME=$(echo ${{ github.repository }})
          repo_name=$(echo "${{ github.repository }}" | cut -d'/' -f2)
          echo "repo_name=${repo_name}" >> $GITHUB_OUTPUT
          DOCKER_IMAGE="${{ secrets.DOCKER_USER }}/${repo_name}"
          echo "docker_image=${DOCKER_IMAGE}" >> $GITHUB_OUTPUT

      - name: Deploy
        env:
          KO_DOCKER_REPO: ${{ secrets.DOCKER_USER }}
          BUILD_VERSION: ${{ steps.set_var.outputs.version }}
        run: |
          echo "Building with version: $BUILD_VERSION"
          ko build ./cmd/server --base-import-paths --sbom=none --tags="$BUILD_VERSION,latest" --local
          docker tag ${{ secrets.DOCKER_USER }}/server:$BUILD_VERSION ${{ steps.set_var.outputs.docker_image }}:$BUILD_VERSION
          docker tag ${{ secrets.DOCKER_USER }}/server:latest ${{ steps.set_var.outputs.docker_image }}:latest
          docker push ${{ steps.set_var.outputs.docker_image }}:$BUILD_VERSION
          docker push ${{ steps.set_var.outputs.docker_image }}:latest
