version: '3.8'

services:
  # Redis Cluster
  redis-node-1:
    image: redis:6-alpine
    command: redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes --port 7001
    ports:
      - "7001:7001"
    networks:
      - leads-network
    volumes:
      - redis-data-1:/data

  redis-node-2:
    image: redis:6-alpine
    command: redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes --port 7002
    ports:
      - "7002:7002"
    networks:
      - leads-network
    volumes:
      - redis-data-2:/data

  redis-node-3:
    image: redis:6-alpine
    command: redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes --port 7003
    ports:
      - "7003:7003"
    networks:
      - leads-network
    volumes:
      - redis-data-3:/data

  redis-node-4:
    image: redis:6-alpine
    command: redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes --port 7004
    ports:
      - "7004:7004"
    networks:
      - leads-network
    volumes:
      - redis-data-4:/data

  redis-node-5:
    image: redis:6-alpine
    command: redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes --port 7005
    ports:
      - "7005:7005"
    networks:
      - leads-network
    volumes:
      - redis-data-5:/data

  redis-node-6:
    image: redis:6-alpine
    command: redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes --port 7006
    ports:
      - "7006:7006"
    networks:
      - leads-network
    volumes:
      - redis-data-6:/data

  # Redis Cluster initialization
  redis-cluster-init:
    image: redis:6-alpine
    depends_on:
      - redis-node-1
      - redis-node-2
      - redis-node-3
      - redis-node-4
      - redis-node-5
      - redis-node-6
    networks:
      - leads-network
    command: >
      sh -c "
        sleep 10 &&
        redis-cli --cluster create 
        redis-node-1:7001 
        redis-node-2:7002 
        redis-node-3:7003 
        redis-node-4:7004 
        redis-node-5:7005 
        redis-node-6:7006 
        --cluster-replicas 1 --cluster-yes
      "

  # Go application
  leads-core:
    build: .
    ports:
      - "8080:8080"
    environment:
      - SERVER_PORT=8080
      - SERVER_READ_TIMEOUT=30s
      - SERVER_WRITE_TIMEOUT=30s
      - REDIS_ADDRESSES=redis-node-1:7001,redis-node-2:7002,redis-node-3:7003,redis-node-4:7004,redis-node-5:7005,redis-node-6:7006
      - REDIS_PASSWORD=
      - REDIS_DB=0
      - JWT_SECRET=super-secret-jwt-key-change-in-production
      - RATE_LIMIT_IP_PER_MINUTE=1
      - RATE_LIMIT_GLOBAL_PER_MINUTE=1000
      - TTL_FREE_DAYS=30
      - TTL_PRO_DAYS=365
    depends_on:
      - redis-cluster-init
    networks:
      - leads-network
    restart: unless-stopped

volumes:
  redis-data-1:
  redis-data-2:
  redis-data-3:
  redis-data-4:
  redis-data-5:
  redis-data-6:

networks:
  leads-network:
    driver: bridge
