services:
  # Single Redis instance (easier for development)
  redis:
    image: redis:6-alpine
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    networks:
      - leads-network
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Go application
  leads-core:
    build: .
    ports:
      - "8080:8080"
    environment:
      - SERVER_PORT=8080
      - SERVER_READ_TIMEOUT=30s
      - SERVER_WRITE_TIMEOUT=30s
      - REDIS_ADDRESSES=redis:6379
      - REDIS_PASSWORD=
      - REDIS_DB=0
      - JWT_SECRET=super-secret-jwt-key-change-in-production
      - RATE_LIMIT_IP_PER_MINUTE=10000
      - RATE_LIMIT_GLOBAL_PER_MINUTE=50000
      - TTL_FREE_DAYS=30
      - TTL_PRO_DAYS=365
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - leads-network
    restart: unless-stopped

volumes:
  redis-data:

networks:
  leads-network:
    driver: bridge
